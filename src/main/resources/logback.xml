<?xml version="1.0" encoding="UTF-8" ?>
<configuration scan="true" scanPeriod="5 seconds" debug="true">
    <property name="contextName" value="logbackzzstaxcode"/>
    <property name="maxHistory" value="10"/>
    <property name="maxFileSize" value="50MB"/>
    <property name="pattern" value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} [%line]- %msg%n "/>
    <property name="logFilePath" value="/data1/dxhy/tomcat/apache-tomcat-8.5.6/logs/"/>
    <contextName>${contextName}</contextName>
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${pattern}</pattern>
        </encoder>
    </appender>
    <!--<appender name="debug" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
        <!--<file>${logFilePath}${contextName}/debug.log</file>-->
        <!--<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
            <!--<fileNamePattern>${logFilePath}${contextName}/debug.%d{yyyy-MM-dd}.log-->
            <!--</fileNamePattern>-->
            <!--<maxHistory>${maxHistory}</maxHistory>-->
            <!--<maxFileSize>${maxFileSize}</maxFileSize>-->
        <!--</rollingPolicy>-->
        <!--<filter class="ch.qos.logback.classic.filter.LevelFilter">-->
            <!--<level>DEBUG</level>-->
            <!--<onMatch>ACCEPT</onMatch>-->
            <!--<onMismatch>DENY</onMismatch>-->
        <!--</filter>-->
        <!--<encoder>-->
            <!--<pattern>${pattern}</pattern>-->
        <!--</encoder>-->
    <!--</appender>-->
    <appender name="info" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${logFilePath}${contextName}/info.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${logFilePath}${contextName}/info.%d{yyyy-MM-dd}.log
            </fileNamePattern>
            <maxHistory>${maxHistory}</maxHistory>
            <maxFileSize>${maxFileSize}</maxFileSize>
        </rollingPolicy>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <encoder>
            <pattern>${pattern}</pattern>
        </encoder>
    </appender>
    <appender name="warn" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${logFilePath}${contextName}/warn.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${logFilePath}${contextName}/warn.%d{yyyy-MM-dd}.log
            </fileNamePattern>
            <maxHistory>${maxHistory}</maxHistory>
            <maxFileSize>${maxFileSize}</maxFileSize>
        </rollingPolicy>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>WARN</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <encoder>
            <pattern>${pattern}</pattern>
        </encoder>
    </appender>
    <appender name="error" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${logFilePath}${contextName}/error.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${logFilePath}${contextName}/error.%d{yyyy-MM-dd}.log
            </fileNamePattern>
            <maxHistory>30</maxHistory>
            <maxFileSize>${maxFileSize}</maxFileSize>
        </rollingPolicy>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <encoder>
            <pattern>${pattern}</pattern>
        </encoder>
    </appender>
    <logger name="com.aisino" level="debug"/>
    <root level="debug">
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="debug"/>
        <appender-ref ref="info"/>
        <appender-ref ref="warn"/>
        <appender-ref ref="error"/>
    </root>
</configuration> 
